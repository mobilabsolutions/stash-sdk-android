apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
    useBuildCache = true
}

def travisBuild = System.getenv("TRAVIS") == "true"
def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def mobilabBackendDevelopmentUrl = properties.getProperty("backend.development")
def oldBsTestKey = properties.getProperty("bs.test_public_key")
def oldBsApiUrl = properties.getProperty("bs.test_api_url")

android {
    buildToolsVersion versions.buildToolsVersion
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        applicationId "com.mobilabsolutions.payment.sample"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Crashlytics. Disabled by default
        manifestPlaceholders += ["fabric-api-key": propOrDef("FABRIC_API_KEY", "")]
        ext.enableCrashlytics = false

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
//            storeFile file("debug.keystore")
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
        }
        release {
            storeFile file("debug.keystore")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            buildConfigField "String" , "mobilabBackendUrl" ,  mobilabBackendDevelopmentUrl
            buildConfigField "String" , "oldBsTestKey " ,  oldBsTestKey
            buildConfigField "String" , "oldBsApiUrl " ,  oldBsApiUrl

            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
        }
        release {
            buildConfigField "String" , "mobilabBackendUrl" ,  mobilabBackendDevelopmentUrl
            buildConfigField "String" , "oldBsTestKey " ,  oldBsTestKey
            buildConfigField "String" , "oldBsApiUrl " ,  oldBsApiUrl
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries = preDexEnabled && !travisBuild
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    // support-lib
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.multidex:multidex:2.0.1'
    // fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
        transitive = true
    }
    // debugging
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    // dagger2
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"
    // rxJava2
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.5'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    // okHttp
    implementation "com.squareup.okhttp3:okhttp:${versions.okHttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okHttp}"
    // glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    // room database
    implementation "android.arch.persistence.room:runtime:${versions.room}"
    implementation "android.arch.persistence.room:rxjava2:${versions.room}"
    kapt "android.arch.persistence.room:compiler:${versions.room}"

    implementation "com.mobilabsolutions.android.commons:android-commons-dagger:3.0.1@aar"
    implementation "com.mobilabsolutions.android.commons:android-commons:3.0.0@aar"

    implementation project(":lib")
    implementation project(":stripeintegration")
}
